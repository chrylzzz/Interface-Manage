package com.lnsoft.module.gzlb.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class TQxxtRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public TQxxtRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(BigDecimal value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(BigDecimal value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(BigDecimal value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(BigDecimal value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<BigDecimal> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<BigDecimal> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSideIsNull() {
            addCriterion("SIDE is null");
            return (Criteria) this;
        }

        public Criteria andSideIsNotNull() {
            addCriterion("SIDE is not null");
            return (Criteria) this;
        }

        public Criteria andSideEqualTo(BigDecimal value) {
            addCriterion("SIDE =", value, "side");
            return (Criteria) this;
        }

        public Criteria andSideNotEqualTo(BigDecimal value) {
            addCriterion("SIDE <>", value, "side");
            return (Criteria) this;
        }

        public Criteria andSideGreaterThan(BigDecimal value) {
            addCriterion("SIDE >", value, "side");
            return (Criteria) this;
        }

        public Criteria andSideGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SIDE >=", value, "side");
            return (Criteria) this;
        }

        public Criteria andSideLessThan(BigDecimal value) {
            addCriterion("SIDE <", value, "side");
            return (Criteria) this;
        }

        public Criteria andSideLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SIDE <=", value, "side");
            return (Criteria) this;
        }

        public Criteria andSideIn(List<BigDecimal> values) {
            addCriterion("SIDE in", values, "side");
            return (Criteria) this;
        }

        public Criteria andSideNotIn(List<BigDecimal> values) {
            addCriterion("SIDE not in", values, "side");
            return (Criteria) this;
        }

        public Criteria andSideBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SIDE between", value1, value2, "side");
            return (Criteria) this;
        }

        public Criteria andSideNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SIDE not between", value1, value2, "side");
            return (Criteria) this;
        }

        public Criteria andStationIsNull() {
            addCriterion("STATION is null");
            return (Criteria) this;
        }

        public Criteria andStationIsNotNull() {
            addCriterion("STATION is not null");
            return (Criteria) this;
        }

        public Criteria andStationEqualTo(String value) {
            addCriterion("STATION =", value, "station");
            return (Criteria) this;
        }

        public Criteria andStationNotEqualTo(String value) {
            addCriterion("STATION <>", value, "station");
            return (Criteria) this;
        }

        public Criteria andStationGreaterThan(String value) {
            addCriterion("STATION >", value, "station");
            return (Criteria) this;
        }

        public Criteria andStationGreaterThanOrEqualTo(String value) {
            addCriterion("STATION >=", value, "station");
            return (Criteria) this;
        }

        public Criteria andStationLessThan(String value) {
            addCriterion("STATION <", value, "station");
            return (Criteria) this;
        }

        public Criteria andStationLessThanOrEqualTo(String value) {
            addCriterion("STATION <=", value, "station");
            return (Criteria) this;
        }

        public Criteria andStationLike(String value) {
            addCriterion("STATION like", value, "station");
            return (Criteria) this;
        }

        public Criteria andStationNotLike(String value) {
            addCriterion("STATION not like", value, "station");
            return (Criteria) this;
        }

        public Criteria andStationIn(List<String> values) {
            addCriterion("STATION in", values, "station");
            return (Criteria) this;
        }

        public Criteria andStationNotIn(List<String> values) {
            addCriterion("STATION not in", values, "station");
            return (Criteria) this;
        }

        public Criteria andStationBetween(String value1, String value2) {
            addCriterion("STATION between", value1, value2, "station");
            return (Criteria) this;
        }

        public Criteria andStationNotBetween(String value1, String value2) {
            addCriterion("STATION not between", value1, value2, "station");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDistanceIsNull() {
            addCriterion("DISTANCE is null");
            return (Criteria) this;
        }

        public Criteria andDistanceIsNotNull() {
            addCriterion("DISTANCE is not null");
            return (Criteria) this;
        }

        public Criteria andDistanceEqualTo(BigDecimal value) {
            addCriterion("DISTANCE =", value, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceNotEqualTo(BigDecimal value) {
            addCriterion("DISTANCE <>", value, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceGreaterThan(BigDecimal value) {
            addCriterion("DISTANCE >", value, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DISTANCE >=", value, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceLessThan(BigDecimal value) {
            addCriterion("DISTANCE <", value, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DISTANCE <=", value, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceIn(List<BigDecimal> values) {
            addCriterion("DISTANCE in", values, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceNotIn(List<BigDecimal> values) {
            addCriterion("DISTANCE not in", values, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DISTANCE between", value1, value2, "distance");
            return (Criteria) this;
        }

        public Criteria andDistanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DISTANCE not between", value1, value2, "distance");
            return (Criteria) this;
        }

        public Criteria andFaultaIsNull() {
            addCriterion("FAULTA is null");
            return (Criteria) this;
        }

        public Criteria andFaultaIsNotNull() {
            addCriterion("FAULTA is not null");
            return (Criteria) this;
        }

        public Criteria andFaultaEqualTo(BigDecimal value) {
            addCriterion("FAULTA =", value, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaNotEqualTo(BigDecimal value) {
            addCriterion("FAULTA <>", value, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaGreaterThan(BigDecimal value) {
            addCriterion("FAULTA >", value, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FAULTA >=", value, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaLessThan(BigDecimal value) {
            addCriterion("FAULTA <", value, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FAULTA <=", value, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaIn(List<BigDecimal> values) {
            addCriterion("FAULTA in", values, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaNotIn(List<BigDecimal> values) {
            addCriterion("FAULTA not in", values, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAULTA between", value1, value2, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAULTA not between", value1, value2, "faulta");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeIsNull() {
            addCriterion("FAULTREMOVETIME is null");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeIsNotNull() {
            addCriterion("FAULTREMOVETIME is not null");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeEqualTo(BigDecimal value) {
            addCriterion("FAULTREMOVETIME =", value, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeNotEqualTo(BigDecimal value) {
            addCriterion("FAULTREMOVETIME <>", value, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeGreaterThan(BigDecimal value) {
            addCriterion("FAULTREMOVETIME >", value, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FAULTREMOVETIME >=", value, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeLessThan(BigDecimal value) {
            addCriterion("FAULTREMOVETIME <", value, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FAULTREMOVETIME <=", value, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeIn(List<BigDecimal> values) {
            addCriterion("FAULTREMOVETIME in", values, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeNotIn(List<BigDecimal> values) {
            addCriterion("FAULTREMOVETIME not in", values, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAULTREMOVETIME between", value1, value2, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andFaultremovetimeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAULTREMOVETIME not between", value1, value2, "faultremovetime");
            return (Criteria) this;
        }

        public Criteria andMidIsNull() {
            addCriterion("MID is null");
            return (Criteria) this;
        }

        public Criteria andMidIsNotNull() {
            addCriterion("MID is not null");
            return (Criteria) this;
        }

        public Criteria andMidEqualTo(BigDecimal value) {
            addCriterion("MID =", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotEqualTo(BigDecimal value) {
            addCriterion("MID <>", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidGreaterThan(BigDecimal value) {
            addCriterion("MID >", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MID >=", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidLessThan(BigDecimal value) {
            addCriterion("MID <", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MID <=", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidIn(List<BigDecimal> values) {
            addCriterion("MID in", values, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotIn(List<BigDecimal> values) {
            addCriterion("MID not in", values, "mid");
            return (Criteria) this;
        }

        public Criteria andMidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MID between", value1, value2, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MID not between", value1, value2, "mid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated do_not_delete_during_merge Fri Nov 16 16:23:22 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_QXXT_RECORD
     *
     * @mbggenerated Fri Nov 16 16:23:22 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}